<Project>

    <!-- Input to the code generator should not include its output. -->
    <Target Name="_GiraffeGeneratorSdkFilesList" BeforeTargets="GiraffeGeneratorSdkGenerateInputCache">
        <ItemGroup>
            <GiraffeGeneratorSource Include="%(Compile.OpenApiSpecFile)" Condition=" '%(Compile.OpenApiSpecFile)' != '' ">
                <OutputPath>$([System.IO.Path]::GetFullPath('%(Compile.FullPath)'))</OutputPath>
                <UseNodaTime Condition=" '%(Compile.OpenApiUseNodaTime)' == 'true' ">true</UseNodaTime>
                <ModuleName>%(Compile.OpenApiModuleName)</ModuleName>
                <MapDateTimeInto>%(Compile.OpenApiMapDateTimeInto)</MapDateTimeInto>
            </GiraffeGeneratorSource>
        </ItemGroup>

        <ItemGroup>
            <GiraffeGeneratorCodegen Include="%(GiraffeGeneratorSource.FullPath)">
                <OutputPath Condition=" '%(GiraffeGeneratorSource.OutputPath)' != '' ">$([System.IO.Path]::GetFullPath('%(GiraffeGeneratorSource.OutputPath)'))</OutputPath>
                <OutputPath Condition=" '%(GiraffeGeneratorSource.OutputPath)' == '' ">%(GiraffeGeneratorSource.FullPath).fs</OutputPath>
                <ModuleName>%(GiraffeGeneratorSource.ModuleName)</ModuleName>
                <UseNodaTime Condition=" '%(GiraffeGeneratorSource.UseNodaTime)' == 'true' ">true</UseNodaTime>
                <MapDateTimeInto>%(GiraffeGeneratorSource.MapDateTimeInto)</MapDateTimeInto>
            </GiraffeGeneratorCodegen>
        </ItemGroup>

        <PropertyGroup>
            <_GiraffeGeneratorSdkCodeGenInputCache>$(IntermediateOutputPath)$(MSBuildProjectFile).GiraffeGeneratorSdkCodeGenInputs.cache</_GiraffeGeneratorSdkCodeGenInputCache>
        </PropertyGroup>
    </Target>

    <!--
    Update the file which captures the total set of all inputs to the code generator.
    This is based on the _GenerateCompileDependencyCache target from the .NET project system. -->
    <Target Name="GiraffeGeneratorSdkGenerateInputCache" DependsOnTargets="ResolveAssemblyReferences;_GiraffeGeneratorSdkFilesList" BeforeTargets="GiraffeGeneratorSdkGenerateCode">

        <ItemGroup>
            <GiraffeGeneratorSdk_CodeGenInputs Include="@(GiraffeGeneratorCodegen);@(ReferencePath);$(GiraffeGeneratorSdk_Generator_Exe)" />
        </ItemGroup>

        <Hash ItemsToHash="@(GiraffeGeneratorSdk_CodeGenInputs)">
            <Output TaskParameter="HashResult" PropertyName="GiraffeGeneratorSdk_UpdatedInputCacheContents" />
        </Hash>

        <WriteLinesToFile Overwrite="true" File="$(_GiraffeGeneratorSdkCodeGenInputCache)" Lines="$(GiraffeGeneratorSdk_UpdatedInputCacheContents)" WriteOnlyWhenDifferent="True" />

    </Target>

    <PropertyGroup>
        <GiraffeGeneratorSdkGenerateCodeDependsOn>$(GiraffeGeneratorSdkGenerateCodeDependsOn);ResolveReferences;GiraffeGeneratorSdkGenerateInputCache</GiraffeGeneratorSdkGenerateCodeDependsOn>
    </PropertyGroup>

    <Target Name="GiraffeGeneratorSdkGenerateCode"
            DependsOnTargets="$(GiraffeGeneratorSdkGenerateCodeDependsOn)"
            BeforeTargets="CoreCompile"
            Condition=" '$(DesignTimeBuild)' != 'true' "
            Inputs="@(GiraffeGeneratorCodegen);$(_GiraffeGeneratorSdkCodeGenInputCache);$(GiraffeGeneratorSdk_Generator_Exe)"
            Outputs="%(GiraffeGeneratorCodegen.OutputPath)">

        <PropertyGroup>
            <_GiraffeGeneratorSdk_InputFileName>%(GiraffeGeneratorCodegen.Identity)</_GiraffeGeneratorSdk_InputFileName>
            <_GiraffeGeneratorSdk_OutputFileName>%(GiraffeGeneratorCodegen.OutputPath)</_GiraffeGeneratorSdk_OutputFileName>
            <_GiraffeGeneratorSdk_ModuleName>%(GiraffeGeneratorCodegen.ModuleName)</_GiraffeGeneratorSdk_ModuleName>
            <_GiraffeGeneratorSdk_UseNodaTime Condition=" '%(GiraffeGeneratorCodegen.UseNodaTime)' == 'true' ">true</_GiraffeGeneratorSdk_UseNodaTime>
            <_GiraffeGeneratorSdk_MapDateTimeInto>%(GiraffeGeneratorCodegen.MapDateTimeInto)</_GiraffeGeneratorSdk_MapDateTimeInto>
        </PropertyGroup>

        <ItemGroup>
            <GiraffeGeneratorSdk_Args Include='--inputfile "$(_GiraffeGeneratorSdk_InputFileName)"' />
            <GiraffeGeneratorSdk_Args Include='--outputfile "$(_GiraffeGeneratorSdk_OutputFileName)"' />
            <GiraffeGeneratorSdk_Args Condition=" '$(_GiraffeGeneratorSdk_ModuleName)' != '' " Include='--module-name "$(_GiraffeGeneratorSdk_ModuleName)"' />
            <GiraffeGeneratorSdk_Args Condition=" '$(_GiraffeGeneratorSdk_UseNodaTime)' == 'true' " Include='--use-noda-time' />
            <GiraffeGeneratorSdk_Args Condition=" '$(_GiraffeGeneratorSdk_MapDateTimeInto)' != '' " Include='--map-date-time-into "$(_GiraffeGeneratorSdk_MapDateTimeInto)"' />
        </ItemGroup>

        <!-- Use dotnet to execute the process. -->
        <Exec Command="$(GiraffeGeneratorSdk_Generator_ExeHost)&quot;$(GiraffeGeneratorSdk_Generator_Exe)&quot; @(GiraffeGeneratorSdk_Args -> '%(Identity)', ' ')" />
    </Target>

    <Target Name="GiraffeGeneratorSdkIncludeCodegenOutputDuringDesignTimeBuild" BeforeTargets="CoreCompile" Condition=" '$(DesignTimeBuild)' == 'true' ">
    </Target>

</Project>