name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
        
    - name: Extract version
      shell: pwsh
      run: |
        $matches = Select-String -path Directory.build.props '<Version>(\d+\.\d+\.\d+)</Version>'
        $version_local = $matches.Matches[0].Groups[1].Value
        echo "VERSION=$version_local" >> $GITHUB_ENV

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install local tools
      run: dotnet tool restore
    
    - name: Dotnet Pack SDK
      run: dotnet pack src/GiraffeGenerator.Sdk -c Release -o bin/nupkg /p:Version=$VERSION
      
    - name: Dotnet Pack Tool
      run: dotnet pack src/GiraffeGenerator -c Release -o bin/nupkg /p:Version=$VERSION
    
    - name: Dotnet Merge Nugets
      run: dotnet mergenupkg --source bin/nupkg/GiraffeGenerator.Sdk.$VERSION.nupkg --other bin/nupkg/GiraffeGenerator.$VERSION.nupkg --tools --only-files
    
    - name: Dotnet Pack Core
      run: dotnet pack src/GiraffeGenerator.Core -c Release -o bin/nupkg /p:Version=$VERSION
      
    - name: Dotnet build Example project
      run: dotnet build src/Example -c Release
      
    - name: Dotnet force restore
      run: dotnet restore --force --no-cache
      
    - name: Run Integration Tests
      run: dotnet test -c Release
